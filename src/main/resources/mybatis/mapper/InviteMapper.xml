<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.havenwithyou.mongnewmong.mapper.InviteMapper">

  <resultMap id="inviteMap" type="inviteDto">
      <id property="inviteid" column="INVITE_ID"/>
      <id property="alias" column="ALIAS"/>
      <id property="email" column="EMAIL"/>
      <id property="contact" column="CONTACT"/>
      <id property="centerid" column="CENTER_ID"/>
      <id property="senderid" column="SENDER_ID"/>
      <id property="receiverid" column="RECEIVER_ID"/>
      <id property="accepted" column="ACCEPTED"/>
     <id property="userType" column="USER_TYPE"/>
  </resultMap>

  <insert id="insertInvite"
          parameterType="InviteDto">
    INSERT INTO INVITE_T (
    INVITE_NO
    , INVITE_ID
    , ALIAS
    , EMAIL
    , CONTACT
    , CENTER_ID
    , SENDER_ID
    , RECEIVER_ID
    , ACCEPTED
    ,USER_TYPE
    ) VALUES (
    INVITE_SEQ.NEXTVAL
    , #{inviteid}
    , #{alias}
    , #{email}
    , #{contact}
    , #{centerid}
    , #{senderid}
    , NULL
    , #{accepted}
    , #{userType}
    )
  </insert>


  <insert id="insertAccessHistory"
          parameterType="Map">
    INSERT INTO ACCESS_HISTORY_T (
    ACCESS_HISTORY_ID
    , USER_ID
    , IP
    , USER_AGENT
    , SESSION_ID
    , SIGNIN_DT
    , SIGNOUT_DT
    ) VALUES (
    ACCESS_HISTORY_SEQ.NEXTVAL
    , #{userid}
    , #{ip}
    , #{userAgent}
    , #{sessionId}
    , CURRENT_DATE
    , NULL
    )
  </insert>
  <select id="getAllUsers" resultType="userDto">
    SELECT USER_ID, NAME, EMAIL, PHONE_NUM PHONE_NO, USER_NAME, USER_TYPE, PW_MODIFY_DT, SIGNUP_DT, AVATAR,
    CENTER_ID, INVITE_ID, DOG_NO, ACCEPTED
    FROM USER_T
  </select>
  <select id="getUserById" resultType="com.havenwithyou.mongnewmong.dto.UserDto">
    SELECT USER_ID, NAME, EMAIL, PHONE_NUM PHONE_NO, USER_NAME, USER_TYPE, PW_MODIFY_DT, SIGNUP_DT, AVATAR,
    CENTER_ID, INVITE_ID, DOG_NO, ACCEPTED
    FROM USER_T
    <where>
      <if test="userid!=null">USER_ID = ${userid}</if>
    </where>
  </select>

  <select id="getUserDetail" resultType="userDto">
    SELECT USER_ID, NAME, EMAIL, PHONE_NUM PHONE_NO, USER_NAME, USER_TYPE, PW_MODIFY_DT, SIGNUP_DT, AVATAR,
    CENTER_ID, INVITE_ID, DOG_NO, ACCEPTED
    FROM USER_T
    <where>
      <if test="userid!=null">USER_ID = ${userid}</if>
    </where>
  </select>

  <select id="getAllUserCount"
          resultType="java.lang.Integer">
    SELECT COUNT(USER_ID) FROM USER_T
    <where>
      <if test="loadUserType!=null">USER_TYPE = ${loadUserType}</if>
    </where>
  </select>

  <select id="getAllUserList"
          parameterType="Map"
          resultType="UserDto">
    SELECT RN, USER_ID, NAME, EMAIL, USER_NAME, USER_TYPE, AVATAR, DOG_NO,
    CENTER_ID, INVITE_ID, ACCEPTED
    FROM(
    SELECT ROW_NUMBER() OVER (ORDER BY ${sortBy} ${sort}) AS RN,
    USER_ID, NAME, EMAIL, USER_NAME, USER_TYPE, AVATAR, DOG_NO,
    CENTER_ID, INVITE_ID, ACCEPTED FROM USER_T U
    <where>
      <if test="loadUserType!=null">USER_TYPE = ${loadUserType}</if>
    </where>
    )
    WHERE RN BETWEEN #{begin} AND #{end}
  </select>



  <select id="checkEmail"
          parameterType="String"
          resultType="int">
    SELECT USER_ID FROM USER_T
    <where>
      EMAIL = #{email}
    </where>
  </select>

  <select id="getUserByMap"
          parameterType="Map"
          resultType="UserDto">
    SELECT USER_ID, NAME, EMAIL, PHONE_NUM PHONENO, USER_NAME, USER_TYPE, PW_MODIFY_DT, SIGNUP_DT, AVATAR,
    CENTER_ID, INVITE_ID, DOG_NO, ACCEPTED
      FROM USER_T
    <where>
      <if test="email!=null">EMAIL = #{email}</if>
      <if test="username!=null">USER_NAME = #{username}</if>
      <if test="pw!=null">AND PW = #{pw}</if>
    </where>
  </select>

  <select id="getDupUserName"
          parameterType="Map"
          resultType="UserDto">
    SELECT USER_ID
    FROM USER_T
    <where>
      <if test="username!=null">USER_NAME = #{username}</if>
    </where>
  </select>

  <select id="getLeftUserByMap"
          parameterType="Map"
          resultType="LeftUserDto">
    SELECT LEFT_USER_ID
    FROM LEFT_USER_T
    <where>
      <if test="email!=null">EMAIL = #{email}</if>
    </where>
  </select>


  <select id="checkInviteCode"
          resultType="int">
    SELECT USER_ID FROM USER_T
    <where>
      <if test="inviteid!=null"> INVITE_ID = #{inviteid}</if>
    </where>
    </select>


  <update id="updateAccessHistory">
    UPDATE ACCESS_HISTORY_T
       SET SIGNOUT_DT = CURRENT_DATE
     WHERE SESSION_ID = #{sessionId} 
  </update>

  <update id="updateProfilePhoto"
          parameterType="Map">
    UPDATE USER_T
    SET AVATAR = #{uploadPath}
    WHERE USER_ID = #{userid}
  </update>

  <update id="setUserType"
          parameterType="userDto">
    UPDATE USER_T
    SET USER_TYPE = #{userType}
    WHERE USER_ID = #{userid}
  </update>

  <update id="updateDogNo"
          parameterType="userDto">
    UPDATE USER_T
    SET DOG_NO = #{dogNo}
    WHERE USER_ID = #{userid}
  </update>
  <update id="updateCenterId">
    UPDATE USER_T
    SET CENTER_ID = #{centerid},
    ACCEPTED = #{accepted}
    WHERE USER_ID = #{userid}

  </update>
  <update id="updateAccepted">
    UPDATE USER_T
    SET ACCEPTED = 1
    WHERE USER_ID = #{userid}
  </update>


  <delete id="deleteUser">
    DELETE
    FROM USER_T
    WHERE USER_ID = #{userid}
  </delete>
</mapper>